{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _queryString = require('query-string');\n\nvar _queryString2 = _interopRequireDefault(_queryString);\n\nvar _cuid = require('cuid');\n\nvar _cuid2 = _interopRequireDefault(_cuid);\n\nvar _popup = require('./util/popup');\n\nvar _popup2 = _interopRequireDefault(_popup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar listenForCredentials = function listenForCredentials(popup, state, resolve, reject) {\n  var hash = void 0;\n\n  try {\n    hash = popup.location.hash;\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      console.error(err);\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (hash) {\n    popup.close();\n\n    var response = _queryString2['default'].parse(hash.substr(1));\n\n    if (response.state !== state) {\n      reject('Invalid state returned.');\n    }\n\n    if (response.access_token) {\n      var expiresIn = response.expires_in ? parseInt(response.expires_in) : NaN;\n      var result = {\n        token: response.access_token,\n        expiresAt: !isNaN(expiresIn) ? Date.now() + expiresIn * 1000 : null\n      };\n      resolve(result);\n    } else {\n      reject(response.error || 'Unknown error.');\n    }\n  } else if (popup.closed) {\n    reject('Authentication was cancelled.');\n  } else {\n    setTimeout(function () {\n      return listenForCredentials(popup, state, resolve, reject);\n    }, 100);\n  }\n};\n\nvar authorize = function authorize(config) {\n  var state = (0, _cuid2['default'])();\n\n  var query = _queryString2['default'].stringify({\n    state: state,\n    response_type: 'token',\n    client_id: config.client,\n    scope: config.scope,\n    redirect_uri: config.redirect\n  });\n\n  var url = config.url + (config.url.indexOf('?') === -1 ? '?' : '&') + query;\n  var width = config.width || 400;\n  var height = config.height || 400;\n  var popup = (0, _popup2['default'])(url, 'oauth2', width, height);\n  return new Promise(function (resolve, reject) {\n    return listenForCredentials(popup, state, resolve, reject);\n  });\n};\n\nexports['default'] = authorize;","map":null,"metadata":{},"sourceType":"script"}