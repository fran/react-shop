{"ast":null,"code":"var _jsxFileName = \"/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login2.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { authMiddleware, authReducer as auth, login, logout } from 'redux-implicit-oauth2';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nconst config = {\n  url: \"http://35.246.165.105:9001/authorizationserver/oauth/authorize\",\n  client: \"client-side\",\n  redirect: \"http://35.246.165.105:9001/authorizationserver/oauth2_implicit_callback\",\n  scope: \"basic\",\n  state: \"$R.slStMc;Lvuuuu\",\n  width: 400,\n  // Width (in pixels) of login popup window. Optional, default: 400\n  height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n\n};\n\nconst Login2 = ({\n  isLoggedIn,\n  login,\n  logout\n}) => {\n  if (isLoggedIn) {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Logout\");\n  } else {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Login\");\n  }\n};\n\nLogin2.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  isLoggedIn: auth.isLoggedIn\n});\n\nconst mapDispatchToProps = {\n  login: () => login(config),\n  logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login2);","map":{"version":3,"sources":["/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login2.js"],"names":["React","PropTypes","connect","authMiddleware","authReducer","auth","login","logout","applyMiddleware","combineReducers","createStore","config","url","client","redirect","scope","state","width","height","Login2","isLoggedIn","propTypes","bool","isRequired","func","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,WAAW,IAAIC,IAAxC,EAA8CC,KAA9C,EAAqDC,MAArD,QAAmE,uBAAnE;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,gEADQ;AAEbC,EAAAA,MAAM,EAAE,aAFK;AAGbC,EAAAA,QAAQ,EAAE,yEAHG;AAIbC,EAAAA,KAAK,EAAE,OAJM;AAKbC,EAAAA,KAAK,EAAE,kBALM;AAMbC,EAAAA,KAAK,EAAE,GANM;AAMD;AACZC,EAAAA,MAAM,EAAE,GAPK,CAOD;;AAPC,CAAf;;AAUA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcd,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAmC;AAChD,MAAIa,UAAJ,EAAgB;AACd,WAAO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEb,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;AACF,CAND;;AAQAa,MAAM,CAACE,SAAP,GAAmB;AACjBD,EAAAA,UAAU,EAAEnB,SAAS,CAACqB,IAAV,CAAeC,UADV;AAEjBjB,EAAAA,KAAK,EAAEL,SAAS,CAACuB,IAAV,CAAeD,UAFL;AAGjBhB,EAAAA,MAAM,EAAEN,SAAS,CAACuB,IAAV,CAAeD;AAHN,CAAnB;;AAMA,MAAME,eAAe,GAAG,CAAC;AAAEpB,EAAAA;AAAF,CAAD,MAAe;AACrCe,EAAAA,UAAU,EAAEf,IAAI,CAACe;AADoB,CAAf,CAAxB;;AAIA,MAAMM,kBAAkB,GAAG;AACzBpB,EAAAA,KAAK,EAAE,MAAMA,KAAK,CAACK,MAAD,CADO;AAEzBJ,EAAAA;AAFyB,CAA3B;AAKA,eAAeL,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,MAA7C,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { authMiddleware, authReducer as auth, login, logout } from 'redux-implicit-oauth2'\nimport { applyMiddleware, combineReducers, createStore } from 'redux'\n\nconst config = {\n  url: \"http://35.246.165.105:9001/authorizationserver/oauth/authorize\",\n  client: \"client-side\",\n  redirect: \"http://35.246.165.105:9001/authorizationserver/oauth2_implicit_callback\",\n  scope: \"basic\",\n  state: \"$R.slStMc;Lvuuuu\",  \n  width: 400, // Width (in pixels) of login popup window. Optional, default: 400\n  height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n}\n\nconst Login2 = ({ isLoggedIn, login, logout }) => {\n  if (isLoggedIn) {\n    return <button type='button' onClick={logout}>Logout</button>\n  } else {\n    return <button type='button' onClick={login}>Login</button>\n  }\n}\n\nLogin2.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  isLoggedIn: auth.isLoggedIn\n})\n\nconst mapDispatchToProps = {\n  login: () => login(config),\n  logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login2)\n"]},"metadata":{},"sourceType":"module"}