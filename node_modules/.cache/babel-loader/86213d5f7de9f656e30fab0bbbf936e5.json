{"ast":null,"code":"var _jsxFileName = \"/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login.js\";\nimport React, { Component } from 'react';\nimport login2 from '../api/api';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from 'redux-implicit-oauth2';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = () => {\n      let htmlString = login2();\n      this.setState(state => {\n        return {\n          html: htmlString\n        };\n      });\n    };\n\n    this.state = {\n      html: ''\n    };\n  }\n\n  render() {\n    const config = {\n      url: \"https://example.com/authorize\",\n      client: \"some_client_id\",\n      redirect: \"https://example.com/callback.html\",\n      scope: \"some_scope\",\n      width: 400,\n      // Width (in pixels) of login popup window. Optional, default: 400\n      height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n\n    };\n\n    const Login = ({\n      isLoggedIn,\n      login,\n      logout\n    }) => {\n      if (isLoggedIn) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          onClick: logout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Logout\");\n      } else {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          onClick: login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Login\");\n      }\n    }; // return (\n    //   <div id=\"login\">\n    //     <button onClick={this.handleLogin}>Login</button>\n    //     <div id=\"login-form\">\n    //     </div>\n    //   </div>\n    // );\n\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login.js"],"names":["React","Component","login2","PropTypes","connect","login","logout","Login","constructor","props","handleLogin","htmlString","setState","state","html","render","config","url","client","redirect","scope","width","height","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAK5BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,WALmB,GAKL,MAAM;AAClB,UAAIC,UAAU,GAAGT,MAAM,EAAvB;AACA,WAAKU,QAAL,CAAeC,KAAD,IAAW;AACvB,eAAO;AAACC,UAAAA,IAAI,EAAEH;AAAP,SAAP;AACD,OAFD;AAID,KAXkB;;AAEjB,SAAKE,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACD;;AAUDC,EAAAA,MAAM,GAAI;AAER,UAAMC,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAE,+BADQ;AAEbC,MAAAA,MAAM,EAAE,gBAFK;AAGbC,MAAAA,QAAQ,EAAE,mCAHG;AAIbC,MAAAA,KAAK,EAAE,YAJM;AAKbC,MAAAA,KAAK,EAAE,GALM;AAKD;AACZC,MAAAA,MAAM,EAAE,GANK,CAMD;;AANC,KAAf;;AASA,UAAMf,KAAK,GAAG,CAAC;AAAEgB,MAAAA,UAAF;AAAclB,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,KAAD,KAAmC;AAC/C,UAAIiB,UAAJ,EAAgB;AACd,eAAO;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEjB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF,KAND,CAXQ,CAmBT;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AA5C2B;;AA+C9B,eAAeE,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport login2 from '../api/api';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { login, logout } from 'redux-implicit-oauth2'\n\nclass Login extends Component {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {html: ''};\n  }\n\n  handleLogin = () => {\n    let htmlString = login2();\n    this.setState((state) => {\n      return {html: htmlString}\n    });\n\n  }\n\n  render () {\n\n    const config = {\n      url: \"https://example.com/authorize\",\n      client: \"some_client_id\",\n      redirect: \"https://example.com/callback.html\",\n      scope: \"some_scope\",\n      width: 400, // Width (in pixels) of login popup window. Optional, default: 400\n      height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n    }\n\n    const Login = ({ isLoggedIn, login, logout }) => {\n      if (isLoggedIn) {\n        return <button type='button' onClick={logout}>Logout</button>\n      } else {\n        return <button type='button' onClick={login}>Login</button>\n      }\n    }\n\n   // return (\n   //   <div id=\"login\">\n   //     <button onClick={this.handleLogin}>Login</button>\n   //     <div id=\"login-form\">\n   //     </div>\n   //   </div>\n   // );\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}