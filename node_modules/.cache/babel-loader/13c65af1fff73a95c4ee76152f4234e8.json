{"ast":null,"code":"var _jsxFileName = \"/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login2.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from 'redux-implicit-oauth2';\nconst config = {\n  url: \"https://example.com/authorize\",\n  client: \"some_client_id\",\n  redirect: \"https://example.com/callback.html\",\n  scope: \"some_scope\",\n  width: 400,\n  // Width (in pixels) of login popup window. Optional, default: 400\n  height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n\n};\n\nconst Login2 = ({\n  isLoggedIn,\n  login,\n  logout\n}) => {\n  React.createElement(\"div\", {\n    id: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: this.handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    id: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n\n  if (isLoggedIn) {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Logout\");\n  } else {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Login\");\n  }\n};\n\nLogin2.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  isLoggedIn: auth.isLoggedIn\n});\n\nconst mapDispatchToProps = {\n  login: () => login(config),\n  logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login2);","map":{"version":3,"sources":["/home/fran/Projects/1x/TGS/commerce/commerce-app/src/components/login2.js"],"names":["React","PropTypes","connect","login","logout","config","url","client","redirect","scope","width","height","Login2","isLoggedIn","handleLogin","propTypes","bool","isRequired","func","mapStateToProps","auth","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,+BADQ;AAEbC,EAAAA,MAAM,EAAE,gBAFK;AAGbC,EAAAA,QAAQ,EAAE,mCAHG;AAIbC,EAAAA,KAAK,EAAE,YAJM;AAKbC,EAAAA,KAAK,EAAE,GALM;AAKD;AACZC,EAAAA,MAAM,EAAE,GANK,CAMD;;AANC,CAAf;;AASA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcV,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAmC;AAEhD;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,KAAKU,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;;AAMA,MAAID,UAAJ,EAAgB;AACd,WAAO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAET,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,GAFD,MAEO;AACL,WAAO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAED,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;AACF,CAbD;;AAeAS,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,UAAU,EAAEZ,SAAS,CAACe,IAAV,CAAeC,UADV;AAEjBd,EAAAA,KAAK,EAAEF,SAAS,CAACiB,IAAV,CAAeD,UAFL;AAGjBb,EAAAA,MAAM,EAAEH,SAAS,CAACiB,IAAV,CAAeD;AAHN,CAAnB;;AAMA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACrCP,EAAAA,UAAU,EAAEO,IAAI,CAACP;AADoB,CAAf,CAAxB;;AAIA,MAAMQ,kBAAkB,GAAG;AACzBlB,EAAAA,KAAK,EAAE,MAAMA,KAAK,CAACE,MAAD,CADO;AAEzBD,EAAAA;AAFyB,CAA3B;AAKA,eAAeF,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,MAA7C,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { login, logout } from 'redux-implicit-oauth2'\n\nconst config = {\n  url: \"https://example.com/authorize\",\n  client: \"some_client_id\",\n  redirect: \"https://example.com/callback.html\",\n  scope: \"some_scope\",\n  width: 400, // Width (in pixels) of login popup window. Optional, default: 400\n  height: 400 // Height (in pixels) of login popup window. Optional, default: 400\n}\n\nconst Login2 = ({ isLoggedIn, login, logout }) => {\n\n  <div id=\"login\">\n    <button onClick={this.handleLogin}>Login</button>\n    <div id=\"login-form\">\n    </div>\n  </div>\n\n  if (isLoggedIn) {\n    return <button type='button' onClick={logout}>Logout</button>\n  } else {\n    return <button type='button' onClick={login}>Login</button>\n  }\n}\n\nLogin2.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  isLoggedIn: auth.isLoggedIn\n})\n\nconst mapDispatchToProps = {\n  login: () => login(config),\n  logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login2)"]},"metadata":{},"sourceType":"module"}